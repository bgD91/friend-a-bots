{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","LocalUsers.js","components/ErrorBoundry.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["Card","name","email","id","className","alt","src","style","width","CardList","users","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","overflowY","border","height","children","localUsers","username","ErrorBoundry","state","hasError","error","errorInfo","this","setState","Component","App","useState","setUsers","setSearchField","count","setCount","useEffect","fetch","then","response","json","concat","console","log","onSearchChange","event","target","value","filteredUsers","filter","toLowerCase","includes","length","onClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.faee5f51.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div\r\n            className='tc dib bg-light-green br3 pa3 ma2 bw2 shadow-5'\r\n        >\r\n            <img alt='users' src={`https://robohash.org/${id}?size=200x200`}/>\r\n            <div\r\n                className='card-user-info'\r\n                style={{\r\n                    width: '13vw',\r\n                }}\r\n            >\r\n                <h2\r\n                    className='robot-name'\r\n                    style={{\r\n                        'fontSize': '18px'\r\n                    }}\r\n                >{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ users }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        users.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={users[i].id}\r\n              name={users[i].name}\r\n              email={users[i].email}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='Search for robot friends'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: 'scroll', border: '3px solid black', height: '75vh'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","export const localUsers = [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Bogdan Calin',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Bogdan Bele',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Belinda Bele',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'Maria Enache',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 14,\r\n    name: 'Claudiu Bele',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 15,\r\n    name: 'Olga Bele',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  }\r\n];\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, {useState, useEffect} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport {localUsers} from '../LocalUsers';\r\nimport './App.css';\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\n\r\nfunction App() {\r\n\r\n    const [users, setUsers] = useState(localUsers);\r\n    const [searchField, setSearchField] = useState('');\r\n    const [count, setCount] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                setUsers(users.concat(localUsers))\r\n            });\r\n        console.log(count);\r\n    }, [count]);\r\n\r\n\r\n    const onSearchChange = (event) => {\r\n        setSearchField(event.target.value)\r\n    };\r\n\r\n\r\n    const filteredUsers = users.filter(user => {\r\n        return user.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return !filteredUsers.length ?\r\n        (\r\n            <div className='tc'>\r\n                <h1>No results</h1>\r\n                <SearchBox searchChange={onSearchChange}/>\r\n            </div>\r\n        ) :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>Friend-a-bots</h1>\r\n                <button onClick={() => setCount(count + 1)}>Count</button>\r\n                <SearchBox searchChange={onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList users={filteredUsers}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}