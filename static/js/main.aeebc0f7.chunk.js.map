{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","LocalUsers.js","components/ErrorBoundry.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["Card","name","email","id","className","alt","src","style","width","CardList","users","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","overflowY","border","height","children","localUsers","username","ErrorBoundry","state","hasError","error","errorInfo","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","concat","filteredUsers","filter","toLowerCase","includes","length","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.aeebc0f7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div\n            className='tc dib bg-light-green br3 pa3 ma2 bw2 shadow-5'\n        >\n            <img alt='users' src={`https://robohash.org/${id}?size=200x200`}/>\n            <div\n                className='card-user-info'\n                style={{\n                    width: '12.5vw',\n                }}\n            >\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ users }) => {\n  return (\n    <div>\n      {\n        users.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={users[i].id}\n              name={users[i].name}\n              email={users[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='Search for robot friends'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflowY: 'scroll', border: '3px solid black', height: '75vh'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","export const localUsers = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Bogdan Calin',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  },\n  {\n    id: 11,\n    name: 'Bogdan Bele',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  },\n  {\n    id: 12,\n    name: 'Belinda Bele',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  },\n  {\n    id: 13,\n    name: 'Maria Enache',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  },\n  {\n    id: 14,\n    name: 'Claudiu Bele',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  },\n  {\n    id: 15,\n    name: 'Olga Bele',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport {localUsers} from '../LocalUsers';\nimport './App.css';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            users: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {\n                this.setState({users: users.concat(localUsers).concat(localUsers)})\n            });\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchField: event.target.value})\n    }\n\n    render() {\n        const {users, searchField} = this.state;\n\n        const filteredUsers = users.filter(user => {\n            return user.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n\n        return !users.length ?\n            (\n                <div className='tc'>\n                    <h1>Loading</h1>\n                </div>\n            ) :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>Friend-a-bots</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList users={filteredUsers}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}